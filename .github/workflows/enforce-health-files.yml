name: Enforce Community Health Files

on:
  workflow_dispatch: # adds a button so that it can run manually or it can be scheduled (below)
  schedule:
    - cron: '0 1 * * *'

jobs:
  check-repos:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: |
          echo "Starting repo health check..."

      - name: Run health check
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ORG_NAME: michelle-swissgrid-demo
        run: |
          REQUIRED_FILES=("README.md" "LICENSE" "CODE_OF_CONDUCT.md")

          repos=$(curl -s -H "Authorization: token $GH_TOKEN" \
            https://api.github.com/orgs/$ORG_NAME/repos?per_page=100 | jq -r '.[].name')

          for repo in $repos; do
            echo "Checking repo: $repo"
            missing=0

            for file in "${REQUIRED_FILES[@]}"; do
              found=false

              for path in "$file" ".github/$file" "docs/$file"; do
                code=$(curl -s -o /dev/null -w "%{http_code}" \
                  -H "Authorization: token $GH_TOKEN" \
                  https://api.github.com/repos/$ORG_NAME/$repo/contents/$path)

                if [[ "$code" == "200" ]]; then
                  found=true
                  break
                fi
              done

              if [[ "$found" == false ]]; then
                echo "‚ùå Missing $file in $repo"
                missing=$((missing+1))
                MISSING_FILES+="- $file"$'\n'
              fi
            done

            # Get archive status
            archived=$(curl -s -H "Authorization: token $GH_TOKEN" \
              https://api.github.com/repos/$ORG_NAME/$repo | jq -r '.archived')

            if [[ "$missing" -gt 0 ]]; then
              if [[ "$archived" == "false" ]]; then
                echo "‚ö†Ô∏è Archiving $repo due to missing files..."
                gh api -X POST "repos/$ORG_NAME/$repo/issues" \
                  -f title="üìÅ Repository Archived Due to Missing Community Health Files" \
                  -f body="This repository has been archived because it is missing required community health files:\n\n$MISSING_FILES\nPlease add the missing files and contact the org maintainers to request unarchiving."
                curl -s -X PATCH \
                  -H "Authorization: token $GH_TOKEN" \
                  -H "Content-Type: application/json" \
                  -d '{"archived": true}' \
                  https://api.github.com/repos/$ORG_NAME/$repo
              else
                echo "üìÅ $repo is already archived."
              fi
            else
              echo "‚úÖ $repo passed the check."

              if [[ "$archived" == "true" ]]; then
                echo "Unarchiving $repo as all required files are present..."
                gh api -X POST "repos/$ORG_NAME/$repo/issues" \
                  -f title="‚úÖ Repository Unarchived After Meeting Community Health Requirements" \
                  -f body="This repository has been unarchived automatically because it now includes all required community health files."
                curl -s -X PATCH \
                  -H "Authorization: token $GH_TOKEN" \
                  -H "Content-Type: application/json" \
                  -d '{"archived": false}' \
                  https://api.github.com/repos/$ORG_NAME/$repo
              fi
            fi
          done
